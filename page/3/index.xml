<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rob&#39;s Notes</title>
    <link>https://robinsonraju.info/</link>
    <description>Recent content on Rob&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2020 Robinson Raju</copyright>
    <lastBuildDate>Sat, 12 Sep 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://robinsonraju.info/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>The One Thing by Gary Keller</title>
        <link>https://robinsonraju.info/books/2016-11-26-the-one-thing/</link>
        <pubDate>Sat, 26 Nov 2016 18:17:11 +0000</pubDate>
        
        <guid>https://robinsonraju.info/books/2016-11-26-the-one-thing/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/books/2016-11-26-the-one-thing/ -&lt;p&gt;&lt;strong&gt;&lt;em&gt;The ONE Thing: The Surprisingly Simple Truth Behind Extraordinary Result&lt;/em&gt;&lt;/strong&gt; by Gary Keller with Jay Papapsan&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;If you chase two rabbits, you will not catch either one.&amp;rdquo; ~ Russian Proverb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;This is the first book that I&amp;rsquo;m reading from &lt;a href=&#34;https://www.amazon.com/kindle-dbs/fd/prime-pr/ref=sv_kstore_2&#34;&gt;&amp;ldquo;Prime Reading&amp;rdquo;&lt;/a&gt; catalog. I discovered Prime reading accidentally, that too when searching for deals during thanksgiving !! It is a great offering from Amazon. I&amp;rsquo;m amazed. I always felt that kindle/prime lending wasn&amp;rsquo;t that great. You never got the book that you wanted, there were restrictions around one per month..etc. I thought I will stop my prime membership next year since I&amp;rsquo;m not using prime much and haven&amp;rsquo;t had a lot of time to view movies or TV series off late. But due to &amp;ldquo;Prime Reading&amp;rdquo;, I&amp;rsquo;ll continue with prime for a long time, I&amp;rsquo;m sure. It doesn&amp;rsquo;t have a great collection yet, but I think it will come. Looking forward to a day where I can borrow books from my local library through kindle. I can borrow e-books and read from &amp;lsquo;Overdrive&amp;rsquo; app on my phone but still nothing matches the experience of reading from a kindle.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;My impression of reading this book was that it was very inspiring. It is an easy, fast read, one feels like the author is an inspiring preacher who talks to you from a podium and you&amp;rsquo;re listening to him with rapt attention. You would love the idea of focusing on one thing, timeblocking (4 hours !) and other practical steps to make life more streamlined. After reading the book, you walk away with a feeling that you&amp;rsquo;ve gained an insight and will transform your life to follow what was said. Of course, after a few days, you go back to being the old self, being reactive to everything around and multi-tasking and not have time for anything. I think reading the notes again will re-inforce the learning and will slowly change the way you do things.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;highlights-from-my-kindle&#34;&gt;Highlights from my Kindle&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Passion for something leads to disproportionate time practicing or working at it. That time spent eventually translates to skill, and when skill improves, results improve. Better results generally lead to more enjoyment, and more passion and more time is invested. It can be a virtuous cycle all the way to extraordinary results.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Success is about doing the right thing, not about doing everything right.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;The trick to success is to choose the right habit and bring just enough discipline to establish it. That’s it.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;It takes an average of 66 days to acquire a new habit.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;The more we use our mind, the less minding power we have.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;The problem with living in the middle is that it prevents you from making extraordinary time commitments to anything.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;To achieve an extraordinary result you must choose what matters most and give it all the time it demands. This requires getting extremely out of balance in relation to all other work issues.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;When you act on your priority, you’ll automatically go out of balance, giving more time to one thing over another.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;A big opportunity is better than a small one, but a small problem is better than a big one.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;The good news is that science isn’t about guessing, but rather the art of progressing.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;What you build today will either empower or restrict you tomorrow.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Achievement and abundance show up because they’re the natural outcomes of doing the right things with no limits attached.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;A journey of a thousand miles must begin with a single step.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Quality of any answer is directly determined by the quality of the question.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Anyone who dreams of an uncommon life eventually discovers there is no choice but to seek an uncommon approach to living it.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Your big ONE Thing is your purpose and your small ONE Thing is the priority you take action on to achieve it.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Our purpose sets our priority and our priority determines the productivity our actions produce.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Connect today to all your tomorrows.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Putting together a life of extraordinary results simply comes down to getting the most out of what you do, when what you do matters.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;The people who achieve extraordinary results don’t achieve them by working more hours. They achieve them by getting more done in the hours they work.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;When you say yes to something, it’s imperative that you understand what you’re saying no to.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Actions build on action. Habits build on habit. Success builds on success.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;When you’re aiming for success you can’t just skip to the end.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Life worth living might be measured in many ways, but the one way that stands above all others is living a life of no regrets.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Put yourself together, and your world falls into place. When you bring purpose to your life, know your priorities, and achieve high productivity on the priority that matters most every day, your life makes sense and the extraordinary becomes possible. All success in life starts within you.&amp;rdquo;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want to review your highlights, you can go here -&amp;gt; &lt;a href=&#34;https://kindle.amazon.com/your_highlights&#34;&gt;https://kindle.amazon.com/your_highlights&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;chapter-notes&#34;&gt;Chapter Notes&lt;/h1&gt;
&lt;h3 id=&#34;chapter-1--the-one-thing&#34;&gt;Chapter 1 : The ONE Thing&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Be like a postage stamp— stick to one thing until you get there.&lt;/em&gt;&amp;rdquo; ~ Josh Billings&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Key point in the chapter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.. Finally, out of desperation, I went as small as I could possibly go and asked: &amp;ldquo;&lt;strong&gt;What’s the ONE Thing you can do this week such that by doing it everything else would be easier or unnecessary?&lt;/strong&gt;&amp;rdquo; And the most awesome thing happened. Results went through the roof.&lt;/p&gt;
&lt;h3 id=&#34;chapter-2--the-domino-effect&#34;&gt;Chapter 2 : The Domino Effect&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Every great change starts like falling dominoes.&lt;/em&gt;&amp;rdquo; ~ BJ Thornton&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let&amp;rsquo;s line up all the &amp;lsquo;ducks in a row&amp;rsquo; is a phrase that my previous manager AH used to use often. It does make sense. When you line up the right things, with one flick, you can start a chain reaction of great things.
Success builds on success. When you see someone who has a lot of knowledge, they learned it over time. When you see someone who has done a lot, they accomplished it over time. The key is &amp;lsquo;over time&amp;rsquo;.&lt;/p&gt;
&lt;h3 id=&#34;chapter-3--success-leaves-clues&#34;&gt;Chapter 3 : Success Leaves Clues&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;It is those who concentrate on but one thing at a time who advance in this world.&lt;/em&gt;&amp;rdquo; ~ Og Mandino&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Passion for something leads to disproportionate time practicing or working at it. That time spent eventually translates to skill, and when skill improves, results improve. Better results generally lead to more enjoyment, and more passion and more time is invested. It can be a virtuous cycle all the way to extraordinary results.&lt;/p&gt;
&lt;p&gt;When the author says &amp;ldquo;The ONE Thing shows up time and again in the lives of the successful because it’s a fundamental truth.&amp;rdquo;, I&amp;rsquo;m reminded of the &amp;lsquo;Matthew Effect&amp;rsquo; from &amp;ldquo;Outliers&amp;rdquo; - &amp;lsquo;To one who has, more will be given ..&#39;&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;part-1--the-lies---they-mislead-and-derail-us&#34;&gt;PART 1 : The Lies - They Mislead and Derail Us&lt;/h2&gt;
&lt;p&gt;The Six Lies Between You and Success:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Everything Matters Equally&lt;/li&gt;
&lt;li&gt;Multitasking&lt;/li&gt;
&lt;li&gt;A Disciplined Life&lt;/li&gt;
&lt;li&gt;Willpower Is Always on Will-Call&lt;/li&gt;
&lt;li&gt;A Balanced Life&lt;/li&gt;
&lt;li&gt;Big is Bad&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;chapter-4everything-matters-equally&#34;&gt;Chapter 4.	Everything Matters Equally&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Things which matter most must never be at the mercy of things which matter least.&lt;/em&gt;&amp;rdquo; —Johann Wolfgang von Goethe&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When everything feels important, everything seems equal. We become busy-bodies, fully active but not moving towards success. Busyness rarely takes care of business !!&lt;/p&gt;
&lt;p&gt;In his seminal book &lt;em&gt;Quality Control Handbook&lt;/em&gt;, Juran adopted Pareto principle of 20/80 to highlight “vital few and trivial many&amp;rdquo;. 20% of things that we do has 80% of impact.&lt;/p&gt;
&lt;p&gt;Transform to-do list to &amp;lsquo;success list&amp;rsquo;. Take 20% of the to-do list to make the success list. Take the 20% of that, iteratively you can reach the &amp;lsquo;one&amp;rsquo; most important thing.&lt;/p&gt;
&lt;h3 id=&#34;chapter-5multitasking&#34;&gt;Chapter 5.	Multitasking&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;To do two things at once is to do neither.&lt;/em&gt;&amp;rdquo; —Publilius Syrus&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Multitasking is a lie. There is a cost to task-switching that most people don&amp;rsquo;t realize they are paying. Distraction undermines results and you can end up doing nothing well. Also it takes a toll on mind and body.&lt;/p&gt;
&lt;h3 id=&#34;chapter-6a-disciplined-life&#34;&gt;Chapter 6.	A Disciplined Life&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;It’s one of the most prevalent myths of our culture: self-discipline.&lt;/em&gt;&amp;rdquo; —Leo Babauta&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Success is about doing the right thing, not about doing everything right. &amp;lsquo;Selected discipline&amp;rsquo; by channeling the energy to important things is very crucial. It takes an average of 66 days to form a habit. Build one habit at a time and give each habit enough time so that it becomes a routine.&lt;/p&gt;
&lt;h3 id=&#34;chapter-7willpower-is-always-on-will-call&#34;&gt;Chapter 7.	Willpower Is Always on Will-Call&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Odysseus understood how weak willpower actually is when he asked his crew to bind him to the mast while sailing by the seductive Sirens.&lt;/em&gt;&amp;rdquo; —Patricia Cohen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Willpower is alway on-call is a lie. Like the charge of a battery, it goes down with usage. So it is super important to prioritize the right thing to do when willpower is higher.&lt;/p&gt;
&lt;p&gt;Willpower is important. For e.g., the Marshamallow experiment done by Walter Michel at Stanford in the 60s and 70s where kids were given a marshamallow and were told that they could have that now or if they wait for 15 minutes, they could eat two. Kids who exercised willpower and delayed their gratification were found (on average) to be more successful later in life.&lt;/p&gt;
&lt;p&gt;Willpower gets reduced on usage. Another study done at Stanford by Prof Baba Shiv - where he divided undergrad students into 2 groups and asked them to memorize some numbers. The first group had to memorize 2-digit numbers and the second 7-digit numbers. They had to then walk across a hallway, to another room and tell the numbers to someone. On the way, they were offered 2 foods - chocolate cake or fruit salad. Students who were asked to memorize 7-digit numbers were twice as likely to choose chocolate (unhealthy treat) since they had reduced willpower.&lt;/p&gt;
&lt;p&gt;Willpower gets reduced if you don&amp;rsquo;t eat. Research shows that people who do not eat make roughly twice as many errors than those who do.&lt;/p&gt;
&lt;p&gt;When willpower is low, we tend to fallback on default settings or on autopilot. This leads to errors in judgement.&lt;/p&gt;
&lt;p&gt;Many things tax our willpower - Implementing new behaviors, Filtering distractions, Resisting temptation, Suppressing emotion, Restraining aggression, Suppressing impulses, Taking tests, Trying to impress others, Coping with fear, Doing something you don’t enjoy, etc.&lt;/p&gt;
&lt;p&gt;Most important thing to remember is that when it comes to willpower, timing is crucial.&lt;/p&gt;
&lt;h3 id=&#34;chapter-8a-balanced-life&#34;&gt;Chapter 8.	A Balanced Life&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;The truth is, balance is bunk. It is an unattainable pipe dream&amp;hellip; . The quest for balance between work and life, as we’ve come to think of it, isn’t just a losing proposition; it’s a hurtful, destructive one.&lt;/em&gt;&amp;rdquo; —Keith H. Hammonds&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Balanced life is a lie, a myth. The term itself was coined only in the 1980s.&lt;/p&gt;
&lt;p&gt;Magic happens at the extremes. To achieve extraordinary results one must choose what matters most and give it all the time it demands. That may be work or life. And then counterbalance later to offset it.&lt;/p&gt;
&lt;p&gt;Think about life as two balancing buckets - work life and personal life, each with its own counterbalancing goals and approaches.&lt;/p&gt;
&lt;h3 id=&#34;chapter-9big-is-bad&#34;&gt;Chapter 9.	Big Is Bad&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;We are kept from our goal, not by obstacles but by a clear path to a lesser goal.&lt;/em&gt;&amp;rdquo; —Robert Brault&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Big is bad is a lie. You should not be afraid of big success and end up sabotaging your own efforts to achieve it. There are a lot of examples of people who went all in and lost everything. And those are used to create fear. So we tend to play it safe.
No one knows the ultimate limit of what we can achieve. So it is better to think big, dream big.
Think big - Act big - Succeed big.&lt;/p&gt;
&lt;h2 id=&#34;part-2--the-truth--the-simple-path-to-productivity&#34;&gt;PART 2 : The Truth – The Simple Path to Productivity&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Be careful how you interpret the world; it is like that.&lt;/em&gt;&amp;rdquo; — Erich Heller&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;chapter-10the-focusing-question&#34;&gt;Chapter 10.	The Focusing Question&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;There is an art to clearing away the clutter and focusing on what matters most. It is simple and it is transferable. It just requires the courage to take a different approach.&lt;/em&gt;&amp;rdquo; — George Anders&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Great questions are path to great answers.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Judge a man by his questions rather than his answers.&amp;rdquo; - Voltaire&lt;/p&gt;
&lt;p&gt;&amp;ldquo;A prudent question is one-half of wisdom.&amp;rdquo; - Sir Francis Bacon&lt;/p&gt;
&lt;p&gt;&amp;ldquo;The power to question is the basis of all human progress.&amp;rdquo; - Indira Gandhi&lt;/p&gt;
&lt;p&gt;Focusing Question -&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&amp;ldquo;WHAT’S the one thing I can do such that by doing it, everything else will be easier or unnecessary.&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;chapter-11the-success-habit&#34;&gt;Chapter 11.	The Success Habit&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Success is simple. Do what’s right, the right way, at the right time.&lt;/em&gt;&amp;rdquo; —Arnold H. Glasow&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Focusing Question is the foundational habit to use to achieve great results.&lt;/p&gt;
&lt;p&gt;Important areas of life&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Spiritual Life&lt;/li&gt;
&lt;li&gt;Physical Health&lt;/li&gt;
&lt;li&gt;Personal Life&lt;/li&gt;
&lt;li&gt;Key Relationships&lt;/li&gt;
&lt;li&gt;Job&lt;/li&gt;
&lt;li&gt;Business&lt;/li&gt;
&lt;li&gt;Financial Life&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Leverage reminders and recruit support to keep your success habit working as powerfully as possible.&lt;/p&gt;
&lt;h3 id=&#34;chapter-12the-path-to-great-answers&#34;&gt;Chapter 12.	The Path to Great Answers&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;People do not decide their futures, they decide their habits and their habits decide their futures.&lt;/em&gt;&amp;rdquo; —F. M. Alexander&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Four options for framing a Great Question.
Q4. Small &amp;amp; Specific
Q3. Small &amp;amp; Broad
Q2. Big &amp;amp; Broad
Q1. Big &amp;amp; Specific&lt;/p&gt;
&lt;p&gt;When you ask a Great Question, you’re in essence pursuing a great goal.
Thinking big and specific is key to a great question. Think Possibilities and benchmark and trend for the best answer.&lt;/p&gt;
&lt;h2 id=&#34;part-3--extraordinary-results---unlocking-the-possibilities-within-you&#34;&gt;PART 3 : Extraordinary Results - Unlocking the Possibilities Within You&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Even if you’re on the right track, you’ll get run over if you just sit there.&lt;/em&gt;&amp;rdquo; — Will Rogers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;chapter-13live-with-purpose&#34;&gt;Chapter 13.	Live with Purpose&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Life isn’t about finding yourself. Life is about creating yourself.&lt;/em&gt;&amp;rdquo; —George Bernard Shaw&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gary goes over Scrooge&amp;rsquo;s story to illustrate that &amp;ldquo;our purpose sets our priority and our priority determines the productivity our actions produce&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;You cannot seek happiness. It happens in the journey. Discover your big &amp;ldquo;Why&amp;rdquo; and do things that bring purpose to your everyday actions.&lt;/p&gt;
&lt;h3 id=&#34;chapter-14live-by-priority&#34;&gt;Chapter 14.	Live by Priority&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Planning is bringing the future into the present so that you can do something about it now.&lt;/em&gt;&amp;rdquo; —Alan Lakein&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Purpose is very important and has the power to shape our lives only in direct proportion to the power of the priority we connect it to. &lt;strong&gt;Purpose without priority is powerless.&lt;/strong&gt;
Future purpose should connect to current priority.&lt;/p&gt;
&lt;h3 id=&#34;chapter-15live-for-productivity&#34;&gt;Chapter 15.	Live for Productivity&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Productivity isn’t about being a workhorse, keeping busy or burning the midnight oil&amp;hellip; . It’s more about priorities, planning, and fiercely protecting your time.&lt;/em&gt;&amp;rdquo; —Margarita Tartakovsky&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Extraordinary results come when you get the most out of what you do.
Time blocking is key for achieving great productivity.&lt;/p&gt;
&lt;p&gt;Time block 3 things in the following order -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Time block your timeoff.&lt;/li&gt;
&lt;li&gt;Time block your ONE Thing.&lt;/li&gt;
&lt;li&gt;Time block your planningtime.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To experience extraordinary results, be a &amp;lsquo;maker&amp;rsquo; in the morning and a &amp;lsquo;manager&amp;rsquo; in the afternoon.&lt;/p&gt;
&lt;p&gt;4 proven ways to battle distractions -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build a bunker&lt;/li&gt;
&lt;li&gt;Store provisions&lt;/li&gt;
&lt;li&gt;Sweep for mines&lt;/li&gt;
&lt;li&gt;Enlist support&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;chapter-16the-three-commitments&#34;&gt;Chapter 16.	The Three Commitments&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Nobody who ever gave his best regretted it.&lt;/em&gt;&amp;rdquo; —George Halas&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mastery can happen only if you commit to be the best. Take ownership of your outcomes.&lt;/p&gt;
&lt;p&gt;The 3 commitments to your one thing:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Follow the Path of Mastery&lt;/li&gt;
&lt;li&gt;Move from &amp;ldquo;E&amp;rdquo; (Entrepreneurial) to &amp;ldquo;P&amp;rdquo; (Purposeful).&lt;/li&gt;
&lt;li&gt;Live the Accountability Cycle&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;chapter-17the-four-thieves&#34;&gt;Chapter 17.	The Four Thieves&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Focus is a matter of deciding what things you’re not going to do.&lt;/em&gt;&amp;rdquo; —John Carmack&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The 4 thieves of Productivity&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Inability to say &amp;ldquo;No&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Fear of Chaos&lt;/li&gt;
&lt;li&gt;Poor Health Habits&lt;/li&gt;
&lt;li&gt;Environment Doesn&amp;rsquo;t Support Your Goals&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;rsquo;ve personally had issues with 1 and 2. The key thing to remember is &lt;strong&gt;&amp;ldquo;When you say yes to something, it’s imperative that you understand what you’re saying no to.&amp;quot;&lt;/strong&gt; Also, make peace with loose ends and clutter!&lt;/p&gt;
&lt;h3 id=&#34;chapter-18the-journey&#34;&gt;Chapter 18.	The Journey&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;To get through the hardest journey we need take only one step at a time, but we must keep on stepping.&lt;/em&gt;&amp;rdquo; —Chinese Proverb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A life worth living might be measured in many ways, but the one way that stands above all others is living a life of no regrets. One step at a time, focusing on the ONE big thing.&lt;/p&gt;
&lt;h3 id=&#34;putting-the-one-thing-to-work&#34;&gt;Putting The ONE Thing to Work&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;In delay there lies no plenty.&lt;/em&gt;&amp;rdquo; -William Shakespeare&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The key thing to make it work is to develop the habit of asking the &amp;lsquo;Focusing Question&amp;rsquo; and keep it up.&lt;/p&gt;
- https://robinsonraju.info/books/2016-11-26-the-one-thing/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Functional Thinking by Neal Ford</title>
        <link>https://robinsonraju.info/books/2016-10-16-functionalthinking/</link>
        <pubDate>Sun, 16 Oct 2016 09:27:14 +0000</pubDate>
        
        <guid>https://robinsonraju.info/books/2016-10-16-functionalthinking/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/books/2016-10-16-functionalthinking/ -&lt;p&gt;&lt;em&gt;For someone who has been doing Java programming and reading through lot of OO codebase for over a decade, functional programming is truly a paradigm shift. It is not like learning a different language or different version of Java from Java 2 (1.2) to Java 8. The first time I was exposed to functional programming is probably around 2012 when I had to do a project for an ML course using R language. It was refreshing to do things differently for sure. Thanks to &lt;a href=&#34;http://rovarghe.blogspot.com&#34;&gt;RV&lt;/a&gt;, I learnt the basics of Clojure last year. I&amp;rsquo;m at a stage where I can read Clojure code and understand and may be write very simple programs but not beyond that. Anyway, the paradigm shift that Ford talks about can be summarized in the example that he gives in the first chapter of the book.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let’s say for a moment that you are a lumberjack. You have the best axe in the forest, which makes you the most productive lumberjack in the camp. Then one day someone shows up and extols the virtues of a new tree-cutting paradigm, the chainsaw. The sales guy is persuasive, so you buy a chainsaw, but you don’t know how it works. Demonstrating your expertise with the previous tree-cutting paradigm, you swing it vigorously at a tree—without cranking it. You quickly conclude that this newfangled chainsaw is a fad, and you return to your axe. Then, someone appears and shows you how to crank the chainsaw.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;The best thing about the book is that he gives a lot of code examples. So one needs to just think of how to solve these examples and get the gist of what is being talked about.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;chapter-1--why&#34;&gt;Chapter 1 : Why&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;OO makes code understandable by encapsulating moving parts. FP makes code under‐ standable by minimizing moving parts.&amp;rdquo; ~ Michael Feathers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;This chapter provides a broad overview and shows some examples of the mental shift that the author is teaching us.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example 1-1. Word frequencies in Java&lt;/li&gt;
&lt;li&gt;Example 1-2. Word frequencies in Java 8&lt;/li&gt;
&lt;li&gt;Example 1-3. indexOfAny() from Apache Commons StringUtils
&lt;ul&gt;
&lt;li&gt;The IndexofAny() method accepts a String and an array and returns the index of the first occurrence in the String of any of the characters in the array&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example 1-4. indexOfAny() example cases&lt;/li&gt;
&lt;li&gt;Example 1-5. Scala version of firstIndexOfAny()&lt;/li&gt;
&lt;li&gt;Example 1-6. Returning a lazy list of matches&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Excercise to self&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write a program in Java 8 or Clojure which takes in a String of words separated by space (&amp;ldquo;a quick brown fox&amp;rdquo;) and returns a map of word frequencies.&lt;/li&gt;
&lt;li&gt;Write a program in Java 8 or Clojure that mimics &amp;lsquo;indexOfAny() from Apache Commons StringUtils&amp;rsquo;. This method accepts a String and an array and returns the index of the first occurrence in the String of any of the characters in the array.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;chapter-2--shift&#34;&gt;Chapter 2 : Shift&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Once garbage collection became mainstream, it simultaneously eliminated entire categories of hard-to-debug problems and allowed the runtime to manage a process that is complex and error-prone for developers. Functional programming aims to do the same thing for the algorithms you write, allowing you to work at a higher level of abstraction while freeing the runtime to perform sophisticated optimizations.&amp;rdquo;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Example 2-1. Typical company process (in Java)
&lt;ul&gt;
&lt;li&gt;Let’s say that you are given a list of names, some of which consist of a single character, and you are asked to return a comma-delimited string with the single letter names removed, with each name capitalized.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example 2-2. Pseudocode for the “company process”&lt;/li&gt;
&lt;li&gt;Example 2-3. Processing functionally in Scala&lt;/li&gt;
&lt;li&gt;Example 2-4. Java 8 version of the Company Process&lt;/li&gt;
&lt;li&gt;Example 2-5. Processing in Groovy&lt;/li&gt;
&lt;li&gt;Example 2-6. Processing in Clojure
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;One of Clojure’s selling points is that it removes concurrency as a developer concern just as Java removed garbage collection.&amp;quot;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example 2-7. Improved readability for Clojure via the thread-last macro&lt;/li&gt;
&lt;li&gt;Example 2-8. Scala processing in parallel&lt;/li&gt;
&lt;li&gt;Example 2-9. Java 8 parallel processing&lt;/li&gt;
&lt;li&gt;Example 2-10. Number classifier in Java
&lt;ul&gt;
&lt;li&gt;Perfect : Sum of factors = number&lt;/li&gt;
&lt;li&gt;Abundant : Sum of factors &amp;gt; number&lt;/li&gt;
&lt;li&gt;Deficient : Sum of factors &amp;lt; number&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Consider aliquotSum where sum of factors doesn&amp;rsquo;t contain the number itself.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example 2-11. Slightly more functional number classifier&lt;/li&gt;
&lt;li&gt;Example 2-12. Number classifier in Java 8&lt;/li&gt;
&lt;li&gt;Example 2-13. Number classifier using the Functional Java framework&lt;/li&gt;
&lt;li&gt;Example 2-14. Filtering in Java 8&lt;/li&gt;
&lt;li&gt;Example 2-15. Using filtering (called findAll()) in Groovy&lt;/li&gt;
&lt;li&gt;Example 2-16. Number classifier optimized&lt;/li&gt;
&lt;li&gt;Example 2-17. Groovy optimized factors&lt;/li&gt;
&lt;li&gt;Example 2-18. The (classify ) function in Clojure encapsulates all the behavior within assignments&lt;/li&gt;
&lt;li&gt;Example 2-19. The foldLeft() method from Functional Java&lt;/li&gt;
&lt;li&gt;Example 2-20. foldLeft() with user-supplied criteria&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;The last part of the chapter is a quick overview of &lt;strong&gt;3 key &amp;lsquo;functions&amp;rsquo;&lt;/strong&gt; in functional programming languages - &lt;strong&gt;filter&lt;/strong&gt;, &lt;strong&gt;map&lt;/strong&gt; and &lt;strong&gt;reduce&lt;/strong&gt;. The author shows code in Scala, Groovy and Clojure.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Excercise to self&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write a progam in Java 8 or Clojure that, given a list of names, some of which consist of a single character, returns a comma-delimited string with the single letter names removed, with each name capitalized.&lt;/li&gt;
&lt;li&gt;Write a program in Java 8 or Clojure that implements Number Classification. i.e, given a number, the program outputs if the number is perfect, abundant or deficient.&lt;/li&gt;
&lt;li&gt;Write a program in Clojure that takes in a range of numbers and returns numbers that are divisible by 3.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;chapter-3--cede&#34;&gt;Chapter 3 : Cede&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Confession: I never want to work in a non-garbage-collected language again. I paid my dues in languages like C++ for too many years, and I don’t want to surrender the conveniences of modern languages. That’s the story of how software development progresses.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;It&amp;rsquo;s so great to see this comment in the book! I spent close to a year in 2007 and over a year in 2015-2016 to re-engineer C++ applications into Java. Though the projects were for different companies (ebay and paypal), co-incidentally, both applications were related to payments!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In this chapter, the author shows five ways developers in functional languages can cede control to the language or runtime, freeing themselves to work on more relevant problems.&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Iteration to Higher-Order Functions&lt;/li&gt;
&lt;li&gt;Closures&lt;/li&gt;
&lt;li&gt;Currying and Partial Application
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Currying&lt;/em&gt; describes the conversion of a multiargument function into a chain of single-argument functions.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Partial application&lt;/em&gt; describes the conversion of a multiargument function into one that accepts fewer arguments, with values for the elided arguments supplied in advance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Recursion&lt;/li&gt;
&lt;li&gt;Streams and Work Reordering&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Example 3-1. Simple closure binding in Groovy&lt;/li&gt;
&lt;li&gt;Example 3-2. Executing the closure block&lt;/li&gt;
&lt;li&gt;Example 3-3. Another closure binding&lt;/li&gt;
&lt;li&gt;Example 3-4. How closures work (in Groovy)&lt;/li&gt;
&lt;li&gt;Example 3-5. makeCounter() in Java&lt;/li&gt;
&lt;li&gt;Example 3-6. Currying in Groovy&lt;/li&gt;
&lt;li&gt;Example 3-7. Partial application versus currying in Groovy&lt;/li&gt;
&lt;li&gt;Example 3-8. Composing functions in Groovy&lt;/li&gt;
&lt;li&gt;Example 3-9. Clojure’s partial application&lt;/li&gt;
&lt;li&gt;Example 3-10. Scala’s currying of arguments&lt;/li&gt;
&lt;li&gt;Example 3-11. Partially applying functions in Scala&lt;/li&gt;
&lt;li&gt;Example 3-12. Using case without match&lt;/li&gt;
&lt;li&gt;Example 3-13. Differences between map and collect&lt;/li&gt;
&lt;li&gt;Example 3-14. Defining a partial function in Scala&lt;/li&gt;
&lt;li&gt;Example 3-15. Alternative definition for answerUnits&lt;/li&gt;
&lt;li&gt;Example 3-16. Defining an incrementer in Scala&lt;/li&gt;
&lt;li&gt;Example 3-17. Adder and incrementer in Groovy&lt;/li&gt;
&lt;li&gt;Example 3-18. Using partial application to supply implicit values&lt;/li&gt;
&lt;li&gt;Example 3-19. List traversal using (sometimes hidden) indexes&lt;/li&gt;
&lt;li&gt;Example 3-20. List traversal using recursion
&lt;ul&gt;
&lt;li&gt;Think of list as head and tail and iterate through it using recursion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example 3-21. Imperative filtering with Groovy
&lt;ul&gt;
&lt;li&gt;Accepts a list and a predicate (a Boolean test) to determine if the item belongs in the list.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Example 3-22. Recursive filtering with Groovy&lt;/li&gt;
&lt;li&gt;Example 3-23. Recursive filtering in Scala&lt;/li&gt;
&lt;li&gt;Example 3-24. Java 8 version of the company process&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;A note on Erlang&amp;rsquo;s tail-call optimization.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Given Erlang’s impressive fault-tolerance capabilities, there are likely tail-recursive loops in production that have run for &lt;strong&gt;years&lt;/strong&gt; (!) uninterrupted.&amp;rdquo;
[&lt;code&gt;emphasis and exclamation added by self. &lt;/code&gt;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Excercise to self&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write a closure (function that returns a function) in Clojure.&lt;/li&gt;
&lt;li&gt;Write a function in Clojure that uses partial function. (partial is a function which takes a function f and a fewer-than-required number of arguments and returns a partially applied function that’s invokable when you supply the remaining arguments)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;chapter-4--smarter-not-harder&#34;&gt;Chapter 4 : Smarter, Not Harder&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Even if you don’t care about functional languages such as Scala or Clojure, functional programming will enter your life through the langauge(s) you now use as they evolve.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;In this chapter Ford discusses two features common in functional languages: memoization (function level caching) and laziness (Lazy evaluation — deferral of expression evaluation for as long as possible).&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example 4-1. Caching sum&lt;/li&gt;
&lt;li&gt;Example 4-2. Testing nonoptimized speed&lt;/li&gt;
&lt;li&gt;Example 4-3. Caching everything&lt;/li&gt;
&lt;li&gt;Example 4-4. Memoizing sum&lt;/li&gt;
&lt;li&gt;Example 4-5. Memoizing everything&lt;/li&gt;
&lt;li&gt;Example 4-6. Inline memoization in Groovy&lt;/li&gt;
&lt;li&gt;Example 4-7. Testing memoized hashing function&lt;/li&gt;
&lt;li&gt;Example 4-8. Memoization in Clojure&lt;/li&gt;
&lt;li&gt;Example 4-9. Memoization implementation in Scala&lt;/li&gt;
&lt;li&gt;Example 4-10. Pseudocode illustrating nonstrict evaluation&lt;/li&gt;
&lt;li&gt;Example 4-11. Prime number finder in Java&lt;/li&gt;
&lt;li&gt;Example 4-12. Prime iterator in Java&lt;/li&gt;
&lt;li&gt;Example 4-13. Number classifier using the Totally Lazy Java framework&lt;/li&gt;
&lt;li&gt;Example 4-14. Using lazy lists in Groovy&lt;/li&gt;
&lt;li&gt;Example 4-15. LazyList implementation&lt;/li&gt;
&lt;li&gt;Example 4-16. Pared-down version of perfect-number classifier in Groovy&lt;/li&gt;
&lt;li&gt;Example 4-17. Lazily initialized list of perfect numbers&lt;/li&gt;
&lt;li&gt;Example 4-18. Building a lazy list in Groovy&lt;/li&gt;
&lt;li&gt;Example 4-19. Exercising lazy lists&lt;/li&gt;
&lt;li&gt;Example 4-20. Finding palindromes in Groovy&lt;/li&gt;
&lt;li&gt;Example 4-21. Clojure’s palindromes&lt;/li&gt;
&lt;li&gt;Example 4-22. Scala palindromes&lt;/li&gt;
&lt;li&gt;Example 4-23. Lazy fields in Groovy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Excercise to self&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Implement caching (using memoization) for Number Classifier built in Chapter 3. Cache factors and sum of factors for each number.&lt;/li&gt;
&lt;li&gt;Given an input string, produce the rot 13 version of the string. &amp;quot;hello&amp;quot; -&amp;gt; &amp;quot;uryyb&amp;quot;. Implement memoized version in Clojure.&lt;/li&gt;
&lt;li&gt;Write a Clojure function to find palindromes in a String of words.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;chapter-5--evolve&#34;&gt;Chapter 5 : Evolve&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.&amp;rdquo; ~ Alan Perlis&lt;/p&gt;
&lt;/blockquote&gt;
- https://robinsonraju.info/books/2016-10-16-functionalthinking/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Outliers by Malcom Gladwell</title>
        <link>https://robinsonraju.info/books/2016-07-10-outliers/</link>
        <pubDate>Sun, 10 Jul 2016 00:00:00 +0000</pubDate>
        
        <guid>https://robinsonraju.info/books/2016-07-10-outliers/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/books/2016-07-10-outliers/ -- https://robinsonraju.info/books/2016-07-10-outliers/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>The Bartimaeus Trilogy by Jonathan Stroud</title>
        <link>https://robinsonraju.info/books/2016-05-20-bartimaeus-trilogy/</link>
        <pubDate>Fri, 20 May 2016 00:00:00 +0000</pubDate>
        
        <guid>https://robinsonraju.info/books/2016-05-20-bartimaeus-trilogy/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/books/2016-05-20-bartimaeus-trilogy/ -- https://robinsonraju.info/books/2016-05-20-bartimaeus-trilogy/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Reading List</title>
        <link>https://robinsonraju.info/posts/reading-list/</link>
        <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
        
        <guid>https://robinsonraju.info/posts/reading-list/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/posts/reading-list/ -&lt;p&gt;Last Updated - &lt;strong&gt;06/06/2020&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;List of books that I have read, started to read, heard a lot about and want to read. I can at least talk one sentence about these books.&lt;/p&gt;
&lt;p&gt;Have written a draft of my &lt;a href=&#34;https://robinsonraju.info/blog/2020-06-06-the-reading-journey/&#34;&gt;Reading Journey&lt;/a&gt; which is a short recollection of what I read when.&lt;/p&gt;
&lt;h2 id=&#34;leadershipmanagement&#34;&gt;Leadership/Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Good to Great: Why Some Companies Make the Leap and Others Don’t&lt;/strong&gt; by Jim Collins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Effective Executive - The Definitive Guide to Getting the Right Things Done&lt;/strong&gt; by Peter F. Drucker&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://robinsonraju.info/books/2018-12-05-how-to-become-ceo/&#34;&gt;How to become CEO&lt;/a&gt;&lt;/strong&gt; by Jeffrey J. Fox&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The One Minute Manager&lt;/strong&gt; by Kenneth Blanchard and Spencer Johnson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dilbert and the Way of the Weasel&lt;/strong&gt; by Scott Adams&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Art of War&lt;/strong&gt; by Sun Tzu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Don’t Bring It to Work&lt;/strong&gt; by Sylvia Lafair&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The 21 Irrefutable Laws of Leadership&lt;/strong&gt; by John C. Maxwell&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Start with Why: How Great Leaders Inspire Everyone to Take Action&lt;/strong&gt; by Simon Sinek&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Ride of a Lifetime&lt;/strong&gt; by Bob Iger&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;High Output Management&lt;/strong&gt; by Andy Grove&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Hard Thing About Hard Things: Building a Business When There Are No Easy Answers&lt;/strong&gt; by Ben Horowitz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Principles: Life and Work&lt;/strong&gt; by Ray Dalio&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lean In: Women, Work, and the Will to Lead&lt;/strong&gt; by Sheryl Sandberg&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;self-help&#34;&gt;Self-Help&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://robinsonraju.info/books/2006-12-10-7-habits-highly-effective-people/&#34;&gt;The 7 Habits of Highly Effective People&lt;/a&gt;&lt;/strong&gt; by Stephen Covey&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://robinsonraju.info/books/2016-11-26-the-one-thing/&#34;&gt;The ONE Thing: The Surprisingly Simple Truth Behind Extraordinary Result&lt;/a&gt;&lt;/strong&gt; by Gary Keller&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Four Agreements&lt;/strong&gt; by Don Miguel Ruiz&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Atomic Habits&lt;/strong&gt; by James Clear&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rich Dad, Poor Dad&lt;/strong&gt; by Robert Kiyosaki&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How to Win Friends and Influence People&lt;/strong&gt; by Dale Carnegie&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Think and Grow Rich&lt;/strong&gt; by Napoleon Hill&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Power of Positive Thinking&lt;/strong&gt; by Dr. Norman Vincent Peale&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Awaken the Giant Within&lt;/strong&gt; by Tony Robbins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Daring Greatly&lt;/strong&gt; by Brené Brown&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Indistractible&lt;/strong&gt; by Nir Eyal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;As a Man Thinketh&lt;/strong&gt; by James Allen&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Who Moved My Cheese?&lt;/strong&gt; by Spencer Johnson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Don&amp;rsquo;t Sweat the Small Stuff&lt;/strong&gt; by Richard Carlson&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;philosophy--psychology&#34;&gt;Philosophy / Psychology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Meditations&lt;/strong&gt; by Marcus Aurelius&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zen and the Art of Motorcycle Maintenance&lt;/strong&gt; by Robert M. Pirsig&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Republic&lt;/strong&gt; by Plato&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nicomachean Ethics&lt;/strong&gt; by Aristotle,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Essential Epicurus&lt;/strong&gt; by Epicurus&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Critique of Pure Reason&lt;/strong&gt; by Emmanuel Kant&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Prince&lt;/strong&gt; by Niccolò Machiavelli&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gödel, Escher, Bach: An Eternal Golden Braid&lt;/strong&gt; by Douglas Hofstader&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beyond Good And Evil&lt;/strong&gt; by Friedrich Nietzsche&lt;/li&gt;
&lt;li&gt;Malcolm Gladwell
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Tipping Point, &lt;a href=&#34;https://robinsonraju.info/books/2016-12-15-blink/&#34;&gt;Blink&lt;/a&gt;, &lt;a href=&#34;https://robinsonraju.info/books/2016-07-10-outliers/&#34;&gt;Outliers&lt;/a&gt;, David and Goliath, What the Dog Saw: And Other Adventures&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Selfish Gene&lt;/strong&gt; by Richard Dawkins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;12 Rules for Life&lt;/strong&gt; by Jordan Peterson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flow – The Psychology of Optimal Experience&lt;/strong&gt; by Mihaly Csikszentmihalyi&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://robinsonraju.info/books/2020-04-28-great-mental-models/&#34;&gt;The Great Mental Models: Volume 1&lt;/a&gt;&lt;/strong&gt; by Shane Parrish&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;biographiesmemoirs&#34;&gt;Biographies/Memoirs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Walter Isaacson
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Steve Jobs, Einstein: His Life and Universe, Leonardo da Vinci, Benjamin Franklin: An American Life&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;My Experiments with Truth&lt;/strong&gt; by M.K. Gandhi&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Diary of a Young Girl&lt;/strong&gt; by Anne Frank&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Story of My Life&lt;/strong&gt; by Helen Keller&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Man’s Search For Meaning&lt;/strong&gt; by Victor Frankl&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Man Who Knew Infinity: A Life of The Genius Ramanujan&lt;/strong&gt; by Robert Kanigel&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wings of Fire&lt;/strong&gt; by APJ Abdul Kalam&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Playing It My Way&lt;/strong&gt; by Sachin Tendulkar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;John Adams&lt;/strong&gt; by David McCullough&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Surely You’re Joking, Mr. Feynman!&lt;/strong&gt; by Richard P. Feynman&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When Breath Becomes Air&lt;/strong&gt; by Paul Kalanithi&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hit Refresh&lt;/strong&gt; by Satya Nadella&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sci-fifantasy&#34;&gt;Sci-fi/Fantasy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Lord of the Rings Series&lt;/strong&gt; by JRR Tolkien&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Harry Potter Series&lt;/strong&gt; by JK Rowling&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A Song of Ice and Fire&lt;/strong&gt; by George RR Martin&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Hitchhiker’s Guide to the Galaxy Series&lt;/strong&gt; by Douglas Adams&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Foundation Trilogy&lt;/strong&gt; by Isaac Asimov&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I, Robot&lt;/strong&gt; by Isaac Asimov&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2001: A Space Odyssey&lt;/strong&gt; by Arthur C. Clarke&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rendezvous With Rama&lt;/strong&gt; by Arthur C. Clarke&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twenty Thousand Leagues Under the Sea&lt;/strong&gt; by Jules Verne&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Journey to the Center of the Earth&lt;/strong&gt; by Jules Verne&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Dark Tower Series&lt;/strong&gt; by Stephen King&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Chronicles of Narnia&lt;/strong&gt; by CS Lewis&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Divergent series&lt;/strong&gt; by Veronica Roth&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Hunger Games Series&lt;/strong&gt; by Suzanne Collins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twilight Series&lt;/strong&gt; by Stephenie Meyer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Wheel of Time Series&lt;/strong&gt; by Robert Jordan&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Dark Tower&lt;/strong&gt; by Stephen King&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Time Machine&lt;/strong&gt; by H.G. Wells&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dune&lt;/strong&gt; by Frank Herbert&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Martian&lt;/strong&gt; by Andy Weir&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1984&lt;/strong&gt; by George Orwell&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fahrenheit 451&lt;/strong&gt; by Ray Bradbury&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brave New World&lt;/strong&gt; by Aldous Huxley&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Neuromancer&lt;/strong&gt; by William Gibson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Frankenstein&lt;/strong&gt; by Mary  Shelley&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Handmaid&amp;rsquo;s Tale&lt;/strong&gt; by Margaret Atwood&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The War Of The Worlds&lt;/strong&gt; by H.G. Wells&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Contact&lt;/strong&gt; by Carl Sagan&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Time Traveler&amp;rsquo;s Wife&lt;/strong&gt; by Audrey Niffenegger&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Do Androids Dream Of Electric Sheep?&lt;/strong&gt; by Philip K. Dick&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Snow Crash&lt;/strong&gt; by Neal Stephenson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cryptonomicon&lt;/strong&gt; by Neal Stephenson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://robinsonraju.info/books/2016-05-20-bartimaeus-trilogy&#34;&gt;The Bartimaeus Trilogy&lt;/a&gt;&lt;/strong&gt; by Jonathan Stroud&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Leviathan Wakes (The Expanse Series)&lt;/strong&gt; by James S. A. Corey&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Outlander Series&lt;/strong&gt; by Diana Gabaldon&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Witcher&lt;/strong&gt; by Andrzej Sapkowski&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;His Dark Materials&lt;/strong&gt; by Philip Pullman&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;literatureclassics&#34;&gt;Literature/Classics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Charles Dickens
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Great Expectations, A Tale of Two Cities, Oliver Twist, David Copperfield&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Thomas Hardy
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Return of the Native, The Mayor of Casterbridge, Far from the Madding Crowd, Tess of the d&amp;rsquo;Urbervilles, Under the Greenwood Tree,A Pair of Blue Eye&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Leo Tolstoy
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Anna Karenina, War and Peace&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wuthering Heights&lt;/strong&gt; by Emily Bronte&lt;/li&gt;
&lt;li&gt;Jane Austen
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pride and Prejudice, Sense and Sensibility, Northanger Abbey, Emma, Mansfield Park, Persuasion&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jane Eyre&lt;/strong&gt; by Charlotte Bronte&lt;/li&gt;
&lt;li&gt;Fyodor Dostoevsky
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Crime and Punishment, Notes from Underground, The Brothers Karamazov&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Iliad&lt;/strong&gt; by Homer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Odyssey&lt;/strong&gt; by Homer (Emily Wilson)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Metamorphosis&lt;/strong&gt; by Franz Kafka&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Count of Monte Cristo&lt;/strong&gt; by Alexander Dumas&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Three Musketeers&lt;/strong&gt; by Alexander Dumas&lt;/li&gt;
&lt;li&gt;George Eliot
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Mill on the Floss, Adam Bede, Silas Marner, Middlemarch&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Treasure Island&lt;/strong&gt; by Robert Louis Stevenson&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Scarlet Letter&lt;/strong&gt; by Nathaniel Hawthorne&lt;/li&gt;
&lt;li&gt;Somerset Maugham
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Of Human Bondage, The Razor&amp;rsquo;s Edge, The Moon and Sixpence&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;other-fiction&#34;&gt;Other Fiction&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardy Boys series&lt;/strong&gt; by Franklin W. Dixon&lt;/li&gt;
&lt;li&gt;Agatha Christie
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Murder on the Orient Express, The Mysterious Affair at Styles, The Secret Adversary, Hercule Poirot&amp;rsquo;s Christmas, The Murder of Roger Ackroyd, The ABC Murders, And Then There Were None, Five Little Pigs, Crooked House, Endless Night, Death on the Nile&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Jeffrey Archer
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kane and Abel, Not a Penny More, Not a Penny Less, Shall We Tell the President?, The Prodigal Daughter, First Among Equals, A Matter of Honour, As the Crow Flies, Honour Among Thieves, The Fourth Estate,The Eleventh Commandment&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sidney Sheldon
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rage of Angels, Bloodline, If Tomorrow Comes, Nothing Lasts Forever, Windmills of the Gods, The Sands of Time, A Stranger in the Mirror, The Doomsday Conspiracy, Tell Me your dreams, Master of the Game, The Stars Shine Down, The Other Side of Midnight, Memories of Midnight, Morning, Noon and Night, Are you afraid of the Dark&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Robert Ludlum
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Bourne Identity, The Bourne Supremacy, The Bourne Ultimatum, The Holcroft Covenant, The Osterman Weekend, The Scarlatti Inheritance, The Matlock Paper, Trevayne, The Matarese Circle, The Icarus Agenda, The Scorpio Illusion&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Harold Robbins
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Carpetbaggers, Goodbye Janette, Never Love a Stranger, A Stone for Danny Fisher, The Dream Merchants, Dreams die first, The storyteller, Memories of another day&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Alistair MacLean
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Guns of Navarone, Where Eagles Dare, Ice Station Zebra, Caravan to Vaccares&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Jack Higgins
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Eagle Has Landed, The Eagle Has Flown, To Catch a King, Night of the Fox, Eye of the Storm&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Daphne du Maurier
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rebecca, The House on the Strand, &lt;a href=&#34;https://robinsonraju.info/books/2005-06-11-kings-general-dumaurier/&#34;&gt;The King&amp;rsquo;s General&lt;/a&gt;, &lt;a href=&#34;https://robinsonraju.info/books/2005-06-17-my-cousin-rachel-daphne-du-maurier/&#34;&gt;My Cousin Rachel&lt;/a&gt;, Frenchman&amp;rsquo;s Creek, Jamaica Inn, The Scapegoat&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dan Brown
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Da Vinci Code, Angels and Demons, Inferno, Digital Fortress, Deception Point, Origin&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Michael Crichton
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Jurassic Park, The Andromeda Strain, Disclosure, Sphere, Congo, Timeline, The Terminal Man, Rising Sun, The Lost World , Westworld&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Perry Mason novels&lt;/strong&gt; by Erle Stanley Gardner&lt;/li&gt;
&lt;li&gt;James Patterson
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Along Came a Spider, Kiss the Girls, Pop Goes the Weasel, Gone&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;John Grisham
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Firm, A Time to Kill, The Pelican Brief, The Rainmaker, The Testament, The Street Lawyer, The Runaway Jury, The Client, The Partner, The Last Juror, The Chamber&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Robin Cook
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Coma, Outbreak, Contagion, Seizure&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nicholas Sparks
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Notebook, Message in a Bottle, A Walk to Remember, Safe Haven,The Rescue, Dear John,The Guardian, Nights in Rodanthe&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clive Cussler
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Inca Gold, Pacific Vortex, Treasure, Valhalla Rising, Sahara&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Paulo Coelho
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Alchemist, Eleven Minutes, Brida, The Winner Stands Alone, By the River Piedra I Sat Down and Wept, The Zahir, The Witch of Portobello&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Kite Runner&lt;/strong&gt; by Khaled Hosseini&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The God of the Small Things&lt;/strong&gt; by Arundhati Roy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Atonement&lt;/strong&gt; by Ian McEwan&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://robinsonraju.info/books/of-love-and-other-demons/&#34;&gt;Of Love and Other Demons&lt;/a&gt;&lt;/strong&gt; by Gabriel García Márquez&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;To Kill a Mockingbird&lt;/strong&gt; by Harper Lee&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Great Gatsby&lt;/strong&gt; by F. Scott Fitzgerald&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Catcher in the Rye&lt;/strong&gt; by J. D. Salinger&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Old Man and the Sea&lt;/strong&gt; by Ernest Hemingway&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gone With the Wind&lt;/strong&gt; by Margaret Mitchell&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;other-non-fiction&#34;&gt;Other Non-Fiction&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Book of Books - The Great American Read&lt;/strong&gt; by PBS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mrs-Funnybones&lt;/strong&gt; by Twinkle-Khanna&lt;/li&gt;
&lt;/ul&gt;
- https://robinsonraju.info/posts/reading-list/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>A Simple MapReduce Job for Iris Dataset</title>
        <link>https://robinsonraju.info/tech-notes/2015-09-30-mapreducejob-iris/</link>
        <pubDate>Wed, 30 Sep 2015 22:50:11 +0000</pubDate>
        
        <guid>https://robinsonraju.info/tech-notes/2015-09-30-mapreducejob-iris/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/tech-notes/2015-09-30-mapreducejob-iris/ -&lt;p&gt;This blog is an attempt to walk through the process of using hadoop to analyze a dataset that might look similar to an actual dataset that we might encounter.&lt;/p&gt;
&lt;p&gt;The objective is to read data from Iris dataset - &lt;a href=&#34;https://archive.ics.uci.edu/ml/datasets/Iris&#34;&gt;https://archive.ics.uci.edu/ml/datasets/Iris&lt;/a&gt; and calculate the mean sepal length of each class of the flower.&lt;/p&gt;
&lt;p&gt;The data is here -&amp;gt; &lt;a href=&#34;https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data&#34;&gt;https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sample record : &lt;code&gt;5.1,3.5,1.4,0.2,Iris-setosa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Attribute Information:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;sepal length in cm&lt;/li&gt;
&lt;li&gt;sepal width in cm&lt;/li&gt;
&lt;li&gt;petal length in cm&lt;/li&gt;
&lt;li&gt;petal width in cm&lt;/li&gt;
&lt;li&gt;class: a) Iris Setosa, b) Iris Versicolour, c) Iris Virginica&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the last blog on wordcount, I used an eclipse project that was bundled automatically with the Cloudera VM and just modified the StubMapper, StubReducer and Driver to plugin the code for wordcount. In this, I thought I&amp;rsquo;ll create one from scratch and see how it works.&lt;/p&gt;
&lt;h2 id=&#34;step-1--create-a-java-project&#34;&gt;Step #1 : Create a Java project&lt;/h2&gt;
&lt;p&gt;Create a Java project using Eclipse.
Add Mapper, Reducer and Driver stubs from the other project. You&amp;rsquo;ll immediately notice that there are many compilation errors.&lt;/p&gt;
&lt;h2 id=&#34;step-2-configure-build-path&#34;&gt;Step 2: Configure Build Path&lt;/h2&gt;
&lt;p&gt;Add the following libraries from &lt;code&gt;/usr/lib/hadoop/client&lt;/code&gt; and &lt;code&gt;/cloudera/lib&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Properties &amp;gt; Java Build Path &amp;gt; Add External Jars&lt;/code&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Also add &lt;code&gt;&amp;lt;project&amp;gt;/conf&lt;/code&gt; as the class folder.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Now the compilation issues would be resolved.&lt;/p&gt;
&lt;h2 id=&#34;step-3-add-code-for-mapper-and-reducer&#34;&gt;Step 3: Add code for Mapper and Reducer&lt;/h2&gt;
&lt;p&gt;The objective is to read the records from the data and compute the mean sepal length of each class of the Iris flower.
map() function in the Mapper gets each row and splits the columns to extract out the key (flower class) and the value (sepal length).
The reduce() function is the Reducer is simple as well. It iterates through the values for each key, computes sum, maintains count and computes mean after the loop ends.&lt;/p&gt;
&lt;h3 id=&#34;mapper&#34;&gt;Mapper&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;package com.iris.data.mapreduce;
import java.io.IOException;

import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class IrisMapper extends Mapper&amp;lt;LongWritable, Text, Text, FloatWritable&amp;gt; {

    @Override
    public void map(LongWritable key, Text value, Context context)
            throws IOException, InterruptedException {

        String[] columns = value.toString().split(&amp;quot;,&amp;quot;);
        float sepal_len = Float.valueOf(columns[0]);
        String flower_class = columns[4];

        context.write(new Text(flower_class), new FloatWritable(sepal_len));
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;reducer&#34;&gt;Reducer&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;package com.iris.data.mapreduce;
import java.io.IOException;

import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class IrisReducer extends
        Reducer&amp;lt;Text, FloatWritable, Text, FloatWritable&amp;gt; {

    @Override
    public void reduce(Text key, Iterable&amp;lt;FloatWritable&amp;gt; values, Context context)
            throws IOException, InterruptedException {

        float sum = 0;
        float count = 0;
        float mean_sepal_len = 0;
        for (FloatWritable val : values) {
            sum += val.get();
            count++;
        }

        mean_sepal_len = sum / count;
        context.write(key, new FloatWritable(mean_sepal_len));
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;run-the-driver&#34;&gt;Run the Driver&lt;/h2&gt;
&lt;p&gt;You should see the following output&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;Iris&lt;/strong&gt;&amp;rdquo; by Pauline Rosenberg via &lt;a href=&#34;https://flic.kr/p/6sZzjm&#34;&gt;Flickr&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/tech-notes/2015-09-30-mapreducejob-iris/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Writing a simple Mapper and Reducer for Wordcount</title>
        <link>https://robinsonraju.info/tech-notes/2015-09-21-simple-map-reduce-job/</link>
        <pubDate>Mon, 21 Sep 2015 23:50:11 +0000</pubDate>
        
        <guid>https://robinsonraju.info/tech-notes/2015-09-21-simple-map-reduce-job/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/tech-notes/2015-09-21-simple-map-reduce-job/ -&lt;p&gt;The last blog was about how to run wordcount using the &amp;ldquo;hadoop-mapreduce-examples.jar&amp;rdquo; that was automatically available in the VMs. How would it be to really write the Mapper and Reducer for this? I searched a bit for an eclipse plugin to be able to create a MR project through eclipse that would have the template for Mapper and Reducer and I would just write the implementation. Found some plugins (e.g HDT) and some screencasts but didn&amp;rsquo;t take me far. Remembered that there was an eclipse icon in the Cloudera VM. Started the VM, clicked on the icon and viola ! there was a sample project with Stubs for Mapper, Reducer and Driver. Exactly what I needed!&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Put in the code for Mapper, Reducer and Driver in the Stub classes and ran the Driver. It worked like a charm. Here is the code for it.&lt;/p&gt;
&lt;h2 id=&#34;mapper&#34;&gt;Mapper&lt;/h2&gt;
&lt;p&gt;The map method takes key, value and context as inputs. The key represents the name of a document and the value is the contents of the document. For e.g, a record in a file. The map method below uses StringTokenizer to split the record into words, loops through the words and writes a 2-tuple (word, 1) into the context. Each mapper does this and what we get in the end is a list of key-value pairs.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class StubMapper extends Mapper&amp;lt;LongWritable, Text, Text, IntWritable&amp;gt; {

    private final static IntWritable one = new IntWritable(1);
    private Text word = new Text();

    @Override
    public void map(LongWritable key, Text value, Context context)
            throws IOException, InterruptedException {

        String line = value.toString();
        StringTokenizer tokenizer = new StringTokenizer(line);
        while (tokenizer.hasMoreTokens()) {
            word.set(tokenizer.nextToken());
            context.write(word, one);
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;reducer&#34;&gt;Reducer&lt;/h2&gt;
&lt;p&gt;A reducer takes an input of a key and list of values associated with the key, adds the counts and writes the output to the context.
For e.g, input of (world, 1), (world, 1) gives output as (world, 2).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class StubReducer extends
        Reducer&amp;lt;Text, IntWritable, Text, IntWritable&amp;gt; {

    @Override
    public void reduce(Text key, Iterable&amp;lt;IntWritable&amp;gt; values, Context context)
            throws IOException, InterruptedException {

        int sum = 0;
        for (IntWritable val : values) {
            sum += val.get();
        }
        context.write(key, new IntWritable(sum));
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;driver&#34;&gt;Driver&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;

public class StubDriver {

    public static void main(String[] args) throws Exception {

        /*
         * Validate that two arguments were passed from the command line.
         */
        if (args.length != 2) {
            System.out.printf(&amp;quot;Usage: StubDriver &amp;lt;input dir&amp;gt; &amp;lt;output dir&amp;gt;\n&amp;quot;);
            System.exit(-1);
        }

        /*
         * Instantiate a Job object for your job&#39;s configuration.
         */
        Job job = new Job();

        /*
         * Specify the jar file that contains your driver, mapper, and reducer.
         * Hadoop will transfer this jar file to nodes in your cluster running
         * mapper and reducer tasks.
         */
        // job.setJarByClass(StubDriver.class);
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(IntWritable.class);

        job.setMapperClass(StubMapper.class);
        job.setReducerClass(StubReducer.class);

        job.setInputFormatClass(TextInputFormat.class);
        job.setOutputFormatClass(TextOutputFormat.class);

        FileInputFormat.addInputPath(job, new Path(args[0]));
        FileOutputFormat.setOutputPath(job, new Path(args[1]));

        /*
         * Specify an easily-decipherable name for the job. This job name will
         * appear in reports and logs.
         */
        job.setJobName(&amp;quot;Stub Driver&amp;quot;);

        /*
         * Start the MapReduce job and wait for it to finish. If it finishes
         * successfully, return 0. If not, return 1.
         */
        boolean success = job.waitForCompletion(true);
        System.exit(success ? 0 : 1);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;how-to-run&#34;&gt;How to Run&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Create an input directory named &amp;quot;input&amp;quot;

Run As &amp;gt; Java Application (give 2 arguments &amp;quot;input&amp;quot; and &amp;quot;output&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Look at the the file &amp;lsquo;part-r-00000&amp;rsquo; in the output directory
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;QuickStart VMs for CDH 5.4.x. (n.d.). Retrieved September 21, 2015, from &lt;a href=&#34;http://www.cloudera.com/content/cloudera/en/downloads/quickstart_vms/cdh-5-4-x.html&#34;&gt;http://www.cloudera.com/content/cloudera/en/downloads/quickstart_vms/cdh-5-4-x.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WordCount. (n.d.). Retrieved September 21, 2015, from &lt;a href=&#34;https://wiki.apache.org/hadoop/WordCount&#34;&gt;https://wiki.apache.org/hadoop/WordCount&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;Words&lt;/strong&gt;&amp;rdquo; by Cayce Newell via &lt;a href=&#34;https://flic.kr/p/4BsjLY&#34;&gt;Flickr&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/tech-notes/2015-09-21-simple-map-reduce-job/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Running Hadoop WordCount example</title>
        <link>https://robinsonraju.info/tech-notes/2015-09-15-wordcount-on-hadoop/</link>
        <pubDate>Tue, 15 Sep 2015 22:50:11 +0000</pubDate>
        
        <guid>https://robinsonraju.info/tech-notes/2015-09-15-wordcount-on-hadoop/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/tech-notes/2015-09-15-wordcount-on-hadoop/ -&lt;p&gt;Here is a small example to run Wordcount program on hadoop. I&amp;rsquo;ve tried to do this using Cloudera VM and also MapR Sandbox. When you start ClouderaVM, it is already loaded with desktop and you can do all the work inside the desktop - open a browser, start a terminal..etc. MapR Sandbox doesnt come with GUI, so you&amp;rsquo;d have to ssh into the machine to work on it. You can open &lt;a href=&#34;https://localhost:8443&#34;&gt;https://localhost:8443&lt;/a&gt; in a browser to see Hue to see FileBrowser, DataBrowser, JobBrowser ..etc.&lt;/p&gt;
&lt;h2 id=&#34;using-cloudera-vm&#34;&gt;Using Cloudera VM&lt;/h2&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download and install &lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;&lt;strong&gt;Virtualbox&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Download &lt;a href=&#34;http://cloudera.com/content/cloudera/en/downloads/quickstart_vms/cdh-5-4-x.html&#34;&gt;&lt;strong&gt;Cloudera VM&lt;/strong&gt;&lt;/a&gt; and import into VirtualBox.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the cloudera VM, open a terminal and go to the directory that contains hadoop library.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd /usr/lib/hadoop-mapreduce/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-sample-files&#34;&gt;Create Sample files&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;echo &amp;#34;Hello world in HDFS&amp;#34; &amp;gt; /home/cloudera/testfile1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;echo &amp;#34;Hadoop word count example in HDFS&amp;#34; &amp;gt; /home/cloudera/testfile2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-directory-for-the-input-files-on-the-hdfs-file-system-type&#34;&gt;Create directory for the input files on the HDFS file system (type)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hdfs dfs -mkdir /user/cloudera/input
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;copy-the-files-from-local-filesystem-to-the-hdfs-filesystem&#34;&gt;Copy the files from local filesystem to the HDFS filesystem&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hdfs dfs -put /home/cloudera/testfile1 /user/cloudera/input
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hdfs dfs -put /home/cloudera/testfile2 /user/cloudera/input
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;run-the-hadoop-wordcount-example&#34;&gt;Run the Hadoop WordCount example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hadoop jar hadoop-mapreduce-examples.jar wordcount /user/cloudera/input /user/cloudera/output
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;after-completion-view-the-output-directory&#34;&gt;After completion view the output directory&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hdfs dfs -ls /user/cloudera/output
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;check-the-output-file-to-see-the-results&#34;&gt;Check the output file to see the results&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hdfs dfs -cat /user/cloudera/output/part-r-00000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;using-map-r-sandbox&#34;&gt;Using Map-R Sandbox&lt;/h2&gt;
&lt;h3 id=&#34;prerequisites-1&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download and install &lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;&lt;strong&gt;Virtualbox&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Download &lt;a href=&#34;https://www.mapr.com/products/mapr-sandbox-hadoop/download&#34;&gt;&lt;strong&gt;MapR Sandbox&lt;/strong&gt;&lt;/a&gt; and install into VirtualBox.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ssh-into-mapr-sandbox-vm&#34;&gt;ssh into MapR Sandbox VM&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;ssh –p 2222 user01@localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-sample-files-1&#34;&gt;Create Sample files&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;mkdir input
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd input
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;echo &amp;#34;Hello world in HDFS&amp;#34; &amp;gt; testfile1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;echo &amp;#34;Hadoop word count example in HDFS&amp;#34; &amp;gt; testfile2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;run-the-hadoop-wordcount-example-1&#34;&gt;Run the Hadoop WordCount example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hadoop jar /opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.0-mapr-1506.jar wordcount /user/user01/input /user/user01/output
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;after-completion-view-the-output-directory-1&#34;&gt;After completion, view the output directory&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hadoop fs -ls /user/user01/output
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;check-the-output-file-to-see-the-results-1&#34;&gt;Check the output file to see the results&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hadoop fs -cat /user/user01/output/part-r-00000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;n1atsigns2 (Network graph of people on twitter connecting to the topics of Big Data, infochimps or Hadoop)&lt;/strong&gt;&amp;rdquo; by Philip Kromer via &lt;a href=&#34;https://flic.kr/p/8R7PyB&#34;&gt;Flickr&lt;/a&gt;. Inverterd colors using Photoshop&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/tech-notes/2015-09-15-wordcount-on-hadoop/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>The Checklist Manifesto by Atul Gawande</title>
        <link>https://robinsonraju.info/books/2015-09-06-the-checklist-manifesto/</link>
        <pubDate>Sun, 06 Sep 2015 08:17:11 +0000</pubDate>
        
        <guid>https://robinsonraju.info/books/2015-09-06-the-checklist-manifesto/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/books/2015-09-06-the-checklist-manifesto/ -- https://robinsonraju.info/books/2015-09-06-the-checklist-manifesto/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Data De-Duplication Performance With Multi-Threaded FBC Algorithm</title>
        <link>https://robinsonraju.info/tech-notes/2015-03-01-de-duplication-multi-thread-chunking-algorithm/</link>
        <pubDate>Sun, 01 Mar 2015 23:13:21 +0000</pubDate>
        
        <guid>https://robinsonraju.info/tech-notes/2015-03-01-de-duplication-multi-thread-chunking-algorithm/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/tech-notes/2015-03-01-de-duplication-multi-thread-chunking-algorithm/ -&lt;p&gt;&lt;strong&gt;Paper reviewed&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jiang, X., Zhao, J., &amp;amp; Zheng, J. (2014). Enhance Data De – Duplication Performance With Multi – Thread Chunking Algorithm. Santa Clara, CA: Santa Clara University.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We&amp;rsquo;ve so far reviewed BSW, TTTD and Winnowing algorithms and also reviewed some papers that showed an improvement over TTTD algorithm.
Through this paper we look at multi-threaded Frequency based Chunking (FBC) method.
FBC makes much improvement in reducing total chunk size and metadata overhead compared to BSW and TTTD but since frequency has to be computed first, it could be slower.
This paper talks about a multi-threaded FBC that exploits the multicore architecture of the modern microprocessor.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;Columbia Supercomputer&lt;/strong&gt;&amp;rdquo; by Scott Beale via &lt;a href=&#34;https://flic.kr/p/H8UJY&#34;&gt;Flickr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/tech-notes/2015-03-01-de-duplication-multi-thread-chunking-algorithm/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Distributional Stability of Chunk Sizes in Data Chunking</title>
        <link>https://robinsonraju.info/tech-notes/2015-02-22-distributional-stability-of-chunk-sizes-in-data-chunking/</link>
        <pubDate>Sun, 22 Feb 2015 09:13:21 +0000</pubDate>
        
        <guid>https://robinsonraju.info/tech-notes/2015-02-22-distributional-stability-of-chunk-sizes-in-data-chunking/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/tech-notes/2015-02-22-distributional-stability-of-chunk-sizes-in-data-chunking/ -&lt;p&gt;&lt;strong&gt;Paper reviewed&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Zhanjie, W., &amp;amp; Lang, S. (2013). Research on Distributional Stability of Chunk Sizes in Data Chunking. International Journal of Digital Content Technology and Its Applications, 443-450.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Couple of weeks back we&amp;rsquo;d reviewed TTTD algorithm and an improvement of TTTD. While TTTD can chunk data according to data content and is more efficient than BSW, it has poor stability and the distribution of chunk sizes is too diverging.&lt;/p&gt;
&lt;p&gt;This paper documents research done on distribution of chunk sizes and proposes Two Directions Sliding Window (TDSW) Algorithm for solving the distribution issue.  The paper also talks about experiments with TDSW algorithm which show that there is a reduction of 30% in unbiased variance
and 50% in running time.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;Axis of stability&lt;/strong&gt;&amp;rdquo; by TJ Gehling via &lt;a href=&#34;https://flic.kr/p/f2t2ps&#34;&gt;Flickr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/tech-notes/2015-02-22-distributional-stability-of-chunk-sizes-in-data-chunking/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Winnowing: local algorithms for document fingerprinting</title>
        <link>https://robinsonraju.info/tech-notes/2015-02-15-winnowing-local-algorithms-for-doc-fingerprinting/</link>
        <pubDate>Sun, 15 Feb 2015 01:23:11 +0000</pubDate>
        
        <guid>https://robinsonraju.info/tech-notes/2015-02-15-winnowing-local-algorithms-for-doc-fingerprinting/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/tech-notes/2015-02-15-winnowing-local-algorithms-for-doc-fingerprinting/ -&lt;p&gt;&lt;strong&gt;Paper reviewed&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Schleimer, S., Wilkerson, D. S., and Aiken, A. 2003. Winnowing: local algorithms for document fingerprinting. In Proceedings of the 2003 ACM SIGMOD International Conference on Management of Data (San Diego, California, USA, June 09 – 12, 2003).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My focus area right now is data chunking alogrithms. I&amp;rsquo;d jumped right into data chunking using hashing algorithms since those are popular and there are multiple papers on them.
This week I thought I&amp;rsquo;d take a step back and review some other techniques.&lt;/p&gt;
&lt;p&gt;Here is a high level overview of different chunking algorithms -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Overlap&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;K-gram algorithm&lt;/li&gt;
&lt;li&gt;0 mod p algorithm&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Winnowing algorithm&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Non-Overlap&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hash-breaking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Last paper focused on non-overlap method. This has more information on overlap methods.
The paper gives an overview of local fingerprinting algorithms. It provides an introduction to Winnowing, a special local fingerprinting algorithm. It goes on to show experimental results for Winnowing&amp;rsquo;s performance being less than 33% of earlier lower bound.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;Seminole Winnowing Basket&lt;/strong&gt;&amp;rdquo; by Mathers Museum of World Cultures via &lt;a href=&#34;https://flic.kr/p/pfY1mV&#34;&gt;Flickr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/tech-notes/2015-02-15-winnowing-local-algorithms-for-doc-fingerprinting/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>A Running Time Improvement for TTTD Algorithm</title>
        <link>https://robinsonraju.info/tech-notes/2015-02-08-running-time-improvement-for-tttd-algorithm/</link>
        <pubDate>Sun, 08 Feb 2015 11:33:21 +0000</pubDate>
        
        <guid>https://robinsonraju.info/tech-notes/2015-02-08-running-time-improvement-for-tttd-algorithm/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/tech-notes/2015-02-08-running-time-improvement-for-tttd-algorithm/ -&lt;p&gt;&lt;strong&gt;Paper reviewed&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Moh, T., &amp;amp; Chang, B. (2010). A Running Time Improvement for the Two Thresholds Two Divisors Algorithm. ACM SE ’10 Proceedings of the 48th Annual Southeast Regional Conference.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Last week I spent some time understanding hash-based data deduplication systems. It felt great to revisit Rabin-Karp Algorithm for string matching. This algorithm was my focus in CS 255 and I had implemented it using Monte Carlo and Las Vegas approaches (A Monte Carlo algorithm has a guaranteed completion time but fails to output a correct answer with a small probability, A Las Vegas algorithm has guaranteed correctness but fails to complete with a small probability).
Before trying to dedupe data, it needs to be chunked. There are many algorithms to do that. The Basic Sliding Window (BSW) algorithm is one of the earliest and widely used. The Two Thresholds Two Divisors (TTTD) algorithm is an improvement over this.
This paper proposes an improvement over the TTTD algorithm.&lt;/p&gt;
&lt;p&gt;I still need to find a better system to embed a presentation in a static page. For now using issuu.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;Curiousity&lt;/strong&gt;&amp;rdquo; by Thomas Hawk via &lt;a href=&#34;https://flic.kr/p/dSuxV1&#34;&gt;Flickr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/tech-notes/2015-02-08-running-time-improvement-for-tttd-algorithm/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Let sleeping files lie: Pattern matching in Z-compressed file</title>
        <link>https://robinsonraju.info/tech-notes/2015-02-01-compressed-pattern-matching/</link>
        <pubDate>Sun, 01 Feb 2015 04:35:12 +0000</pubDate>
        
        <guid>https://robinsonraju.info/tech-notes/2015-02-01-compressed-pattern-matching/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/tech-notes/2015-02-01-compressed-pattern-matching/ -&lt;p&gt;This is a review of the paper on Pattern matching in Z-compressed files. I&amp;rsquo;d done a project last year to implement LZW compression and chanced upon this paper while I was googling for some information on LZW. To see two areas that I&amp;rsquo;d worked on in the past - Data Search (Had helped build a search engine using Lucene 10 yrs back and used Solr for another project a few years back) and Data Compression come together, to know that we would be able to index data and search from compressed files without decompressing them, was very intersting and I wanted to find more information and see some implementation of this.&lt;br&gt;
The review of the paper was presented to some students at SJSU.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Paper reviewed&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Amir, A., Benson, G., &amp;amp; Farach, M. (1996). Let sleeping files lie: Pattern matching in Z-compressed file. Journal of System Sciences, 52, 299-307.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The presetation had the following sections -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Overview of Data compression&lt;/li&gt;
&lt;li&gt;Details about LZW compression&lt;/li&gt;
&lt;li&gt;Compressed Pattern Matching&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TBD&lt;/strong&gt; Hope to put the ppt here (once I learn to use reveal.js here!)&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[1]  A. Amir, G. Benson and M. Farach, “Let sleeping files lie: Pattern matching in Z-compressed file”, Journal of System Sciences, 52: 299-307, 1996.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[2] M. Farach and M. Thorup, &amp;ldquo;String matching in Lempel-Ziv compressed strings&amp;rdquo;, Algorithmica, 20: 388-404, 1998&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[3] D. E. Knuth, J. H. Morris V. R. Pratt, SIAM J. Comput. 6, 323, 1977&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[4] G. Navarro and M. Raffinot, &amp;ldquo;A general practical approach to pattern matching over Ziv-Lempel compressed text&amp;rdquo;, Proceedings, Combinatorial Pattern Matching, LNCS 1645: pp. 14-36, 1999.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[5] N. Zhang, T. Tao, R. V. Satya and A. Mukherjee, “A modified LZW algorithm for compressed text retrieval with random access property”, draft, Computer Science Department, University of Central Florida, 2004.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;Elephant seals asleep&lt;/strong&gt;&amp;rdquo; by Bill Abbott via &lt;a href=&#34;https://flic.kr/p/2bVDZF&#34;&gt;Flickr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/tech-notes/2015-02-01-compressed-pattern-matching/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>The End of Power by Moses Naim</title>
        <link>https://robinsonraju.info/books/2015-01-10-end-of-power/</link>
        <pubDate>Sat, 10 Jan 2015 10:17:11 +0000</pubDate>
        
        <guid>https://robinsonraju.info/books/2015-01-10-end-of-power/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/books/2015-01-10-end-of-power/ -&lt;p&gt;&lt;em&gt;Mark Zuckerberg posts a public challenge/goal for himself at the beginning of every year and in 2015 it was to &lt;a href=&#34;https://www.facebook.com/ayearofbooks/&#34;&gt;read a new book every two weeks&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Power no longer buys as much as it did in the past. In the 21st century, power is easy to get, harder to use - and easy to lose.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.com/End-Power-Boardrooms-Battlefields-Churches/dp/0465065694&#34;&gt;&amp;lsquo;The End of Power&amp;rsquo;&lt;/a&gt; was the first book chosen. The theme of the book is that power is not what it used to be. People in power are not as powerful as in the past and not as much as we sometimes think them to be. Power has weakened because barriers to power have reduced by the &lt;strong&gt;&amp;ldquo;More&amp;rdquo;, &amp;ldquo;Mobility&amp;rdquo;&lt;/strong&gt; and &lt;strong&gt;&amp;ldquo;Mentality&amp;rdquo;&lt;/strong&gt; revolution. The book makes one think about the world around us. In a way, the world has become more democratic and ordinary people have access/chance to rise to the top but when one looks at the world from the top, it is more chaotic and difficult to manage. One might choose to not get into management/leadership positions because of this.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;chapter-1-the-decay-of-power&#34;&gt;Chapter 1	: The Decay of Power&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Power is the ability to direct or prevent the current or future actions of other groups and individuals.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;This chapter gives the example of James Black Jr., a 12 yr old from a working class family in Brooklyn, NY who becomes a Chess Grandmaster at the age of 12. It is a global trend. More players are learning the game and achieving mastery sooner than their predecesors, many of them on their own!. The reason is because the easier access to knowledge - of millions of games by other Grandmasters or computer simulation of moves, made by digital revolution and the internet. The author goes on to say that the similar trend is seen in all the other aspects of life. The chapter also gives us an overview of what the book&amp;rsquo;s is going to talk about.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;chapter-2-making-sense-of-power-how-it-works-and-how-to-keep-it&#34;&gt;Chapter 2	: Making Sense of Power: How It Works and How to Keep It&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Identify the barriers to power and whether they are coming up or going down, and you can solve a large part of the puzzle of power.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;The main theme of this chapter is extend the definition of power in the first chapter. Power is expressed through four different means - The Muscle, The Code, The Pitch, The Reward.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;MacMillan&amp;rsquo;s Taxonomy of Power&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Outcome seen as improvement&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Outcome seen as nonimprovement&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Change incentives&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Inducement via reward: Increase the salary, lower a price&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Coercion via muscle: Law enforcement, repression, violence&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Change preferences&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Persuasion via pitch: Advertising, campaigning&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Obligation via code: Religious or traditional duty, moral suasion&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;chapter-3-how-power-got-big-an-assumptions-unquestioned-rise&#34;&gt;Chapter 3	: How Power Got Big: An Assumption&amp;rsquo;s Unquestioned Rise&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Weber’s central message was that without a reliable, well-functioning organization, or, to use his term, without a bureaucracy, power could not be effectively wielded.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;The main theme of this chapter is to about how companies throughout the world became huge, especially after the World War II. Huge companies could be managed only via hierarchies and bureaucracy. The author talks in depth about Max Weber, German sociologist who analyzed Western economies and wrote about bureaucracy and how it would lead to power being managed by big corporations.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;chapter-4-how-power-lost-its-edge-the-more-mobility-and-mentality-revolutions&#34;&gt;Chapter 4	: How Power Lost Its Edge: The More, Mobility, and Mentality Revolutions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;The decoupling of power from size, and thus the decoupling of the capacity to use power effectively from the control of a large Weberian bureaucracy, is changing the world.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The &lt;strong&gt;More&lt;/strong&gt; revolution - Overwhelming the means of control&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The &lt;strong&gt;Mobility&lt;/strong&gt; revolution - The end of captive audiences&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The &lt;strong&gt;Mentality&lt;/strong&gt; revolution - Taking nothing for granted anymore&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Power and the three revolutions:&lt;/strong&gt;&lt;/em&gt;
&lt;img src=&#34;https://robinsonraju.info/images/EndOfPower-ch4.png&#34; alt=&#34;alt text&#34; title=&#34;Power and the 3 revolutions&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;chapter-5-why-are-landslides-majorities-and-mandates-endangered-species-the-decay-of-power-in-national-politics&#34;&gt;Chapter 5	: Why Are Landslides, Majorities, and Mandates Endangered Species? The Decay of Power in National Politics&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Accordingly, the noble art of governing now depends more heavily on a much dirtier, hands-on skill: forming and maintaining a coalition.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;The main theme of this chapter is the before and after contrast of the governments across the world - number of sovereign nations has quadrupled since 1945, democracies have increased, autocracies have gone down, there are more hung parliaments now, very few landslide victories, etc.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;chapter-6-pentagons-versus-pirates-the-decaying-power-of-large-armies&#34;&gt;Chapter 6	: Pentagons Versus Pirates: The Decaying Power of Large Armies&lt;/h2&gt;
&lt;h2 id=&#34;chapter-7-whose-world-will-it-be-vetoes-resistance-and-leaks-or-why-geopolitics-is-turning-upside-down&#34;&gt;Chapter 7	: Whose World Will It Be? Vetoes, Resistance, and Leaks-or Why Geopolitics Is Turning Upside Down&lt;/h2&gt;
&lt;h2 id=&#34;chapter-8-business-as-unusual-corporate-dominance-under-siege&#34;&gt;Chapter 8	: Business as Unusual: Corporate Dominance Under Siege&lt;/h2&gt;
&lt;h2 id=&#34;chapter-9-hyper-competition-for-your-soul-heart-and-brain&#34;&gt;Chapter 9	: Hyper-Competition for Your Soul, Heart, and Brain&lt;/h2&gt;
&lt;h2 id=&#34;chapter-10--the-decay-of-power-is-the-glass-half-full-or-half-empty&#34;&gt;Chapter 10 : The Decay of Power: Is the Glass Half-Full or Half-Empty?&lt;/h2&gt;
&lt;h2 id=&#34;chapter-11--power-is-decaying-so-what-what-to-do&#34;&gt;Chapter 11 : Power Is Decaying: So What? What to Do?&lt;/h2&gt;
- https://robinsonraju.info/books/2015-01-10-end-of-power/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Delivering a project and presenting to a multi-level audience</title>
        <link>https://robinsonraju.info/management/2014-11-18-presenting-to-a-multi-level-audience/</link>
        <pubDate>Tue, 18 Nov 2014 23:15:14 +0000</pubDate>
        
        <guid>https://robinsonraju.info/management/2014-11-18-presenting-to-a-multi-level-audience/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/management/2014-11-18-presenting-to-a-multi-level-audience/ -&lt;p&gt;A project delivery is a culmination of the team’s effort after a series of sprints. After a several sequences of twists and turns or crests and troughs of requirement/direction changes, the team is finally at the juncture where it has produced a product that the client wanted. The client has been involved in the process from the beginning, so nothing should be a surprise. Project delivery is also an opportunity to showcase the product to a broader audience than the immediate client that the team has been working on. Now comes the question of presenting the product to an audience that is not aware of the product yet. Worse, the audience may be very diverse in their technical or domain knowledge. How do we go about creating a presentation that appeals to all.&lt;/p&gt;
&lt;p&gt;A common rule of thumb for presentations is to go with the least common denominator in the audience who is significant enough. If the person with the least technical knowledge understands your framework, it is a win. There is always more hardwork in creating a simple presentation than a complex one. One usually starts by creating a presentation with all details in it and then stripping it slowly of the complexities layer by layer, in the end leaving only the most vital information that could be understood by all. After all, we’re investing time and energy, the audience is expecting to get something and if we disappoint, the ramifications could be disastrous. The audience may never come back even if the next product is stellar.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The objective is very simple – grab audience’s attention and keep it.&lt;/p&gt;
&lt;p&gt;As the picture above shows, audience will naturally lose interest with time. The key is to find out what interested the audience in the beginning – is it curiosity, is it a joke that you told in the beginning ? Each audience is unique, so you would have to determine what works for a specific audience at that time. Whatever works, use that technique often so that you can bring the audience to a higher attention span than they normally would be in.&lt;/p&gt;
&lt;p&gt;Also, always remember to keep the presentation simple and easy to remember.&lt;/p&gt;
&lt;p&gt;If you’re successful, the audience will be engaged, they would have a good opinion about the product and also good knowledge about the product to make the right choices.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reimold, P., &amp;amp; Reimold, C. (2003, October). IEEE-USA Today’s Engineer. “&lt;strong&gt;On the Road to a Great Presentation —
Step One: Care About Your Audience&lt;/strong&gt;”, Retrieved November 20, 2014, from &lt;a href=&#34;http://www.todaysengineer.org/2003/Oct/presentations-p1.asp&#34;&gt;http://www.todaysengineer.org/2003/Oct/presentations-p1.asp&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reimold, P., &amp;amp; Reimold, C. (2004, September). IEEE-USA Today’s Engineer. “&lt;strong&gt;Many Audiences, One Formula for Success&lt;/strong&gt;”, Retrieved November 20, 2014, from &lt;a href=&#34;http://www.todaysengineer.org/2004/Aug/presentations.asp&#34;&gt;http://www.todaysengineer.org/2004/Aug/presentations.asp&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;&lt;strong&gt;Election night crowd, Wellington, 1931&lt;/strong&gt;&amp;rdquo; from National Library NZ via &lt;a href=&#34;https://flic.kr/p/64VEva&#34;&gt;Flickr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/management/2014-11-18-presenting-to-a-multi-level-audience/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Quotes on Learning</title>
        <link>https://robinsonraju.info/posts/2014-12-14-learning-quotes/</link>
        <pubDate>Fri, 14 Nov 2014 00:00:00 +0000</pubDate>
        
        <guid>https://robinsonraju.info/posts/2014-12-14-learning-quotes/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/posts/2014-12-14-learning-quotes/ -&lt;p&gt;Some quotes on learning -&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Disce Quasi Semper Victurus; Vive Quasi Cras Moriturus.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Translated, it means:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Learn As if You Were Going to Live Forever; Live As if You Were Going to Die Tomorrow.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;~ Gandhi
(In English, it is often attributed to Gandhi, the original Latin is commonly attributed to &lt;strong&gt;Edmund Rich&lt;/strong&gt; (aka. St. Edmund of Abingdon, Eadmund of Canterbury) &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Learning never exhausts the mind.&amp;rdquo;
~ &lt;strong&gt;Leonardo da Vinci&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Try to learn something about everything and everything about something.&amp;rdquo;
~ &lt;strong&gt;Thomas Huxley&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;The doer alone learneth.&amp;rdquo;
~ &lt;strong&gt;Friedrich Nietzsche&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Tell me and I forget, teach me and I may remember, involve me and I learn.&amp;rdquo;
~ &lt;strong&gt;Benjamin Franklin&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;By three methods we may learn wisdom: First, by reflection, which is noblest; Second, by imitation, which is easiest; and third by experience, which is the bitterest.&amp;rdquo;
~ &lt;strong&gt;Confucius&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;A little learning is a dangerous thing.&amp;rdquo;
~ &lt;strong&gt;Alexander Pope&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Yesterday I was clever, So I changed the World. Today I am wise, So I am changing myself.&amp;rdquo;
~ &lt;strong&gt;Rumi&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://nocturnaldiscourse.wordpress.com/2009/05/25/disce-quasi-semper-victurus-vive-quasi-cras-moriturus/&#34;&gt;http://nocturnaldiscourse.wordpress.com/2009/05/25/disce-quasi-semper-victurus-vive-quasi-cras-moriturus/&lt;/a&gt; &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
- https://robinsonraju.info/posts/2014-12-14-learning-quotes/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Time Tips</title>
        <link>https://robinsonraju.info/posts/2014-11-14-time-tips/</link>
        <pubDate>Fri, 14 Nov 2014 00:00:00 +0000</pubDate>
        
        <guid>https://robinsonraju.info/posts/2014-11-14-time-tips/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/posts/2014-11-14-time-tips/ -&lt;ol&gt;
&lt;li&gt;Count all your time as time to be used and make every attempt to get satisfaction out of every moment.&lt;/li&gt;
&lt;li&gt;Find something to enjoy in whatever you do.&lt;/li&gt;
&lt;li&gt;Try to be an optimist and seek out the good in your life.&lt;/li&gt;
&lt;li&gt;Find ways to build on your successes.&lt;/li&gt;
&lt;li&gt;Stop regretting your failures and start learning from your mistakes.&lt;/li&gt;
&lt;li&gt;Remind yourself, &amp;ldquo;There is always enough time for the important things.&amp;rdquo; If it is important, you should be able to make time to do it.&lt;/li&gt;
&lt;li&gt;Continually look at ways of freeing up your time.&lt;/li&gt;
&lt;li&gt;Examine your old habits and search for ways to change or eliminate them.&lt;/li&gt;
&lt;li&gt;Try to use waiting time. Review notes or do practice problems.&lt;/li&gt;
&lt;li&gt;Keep paper or a calendar with you to jot down the things you have to do or notes to yourself.&lt;/li&gt;
&lt;li&gt;Examine and revise your lifetime goals on a monthly basis and be sure to include progress towards those goals on a daily basis.&lt;/li&gt;
&lt;li&gt;Put up reminders in your home or office about your goals.&lt;/li&gt;
&lt;li&gt;Always keep those long term goals in mind.&lt;/li&gt;
&lt;li&gt;Plan your day each morning or the night before and set priorities for yourself.&lt;/li&gt;
&lt;li&gt;Maintain and develop a list of specific things to be done each day, set your priorities and the get the most important ones done as soon in the day as you can. Evaluate your progress at the end of the day briefly.&lt;/li&gt;
&lt;li&gt;Look ahead in your month and try and anticipate what is going to happen so you can better schedule your time.&lt;/li&gt;
&lt;li&gt;Try rewarding yourself when you get things done as you had planned, especially the important ones.&lt;/li&gt;
&lt;li&gt;Do first things first.&lt;/li&gt;
&lt;li&gt;Have confidence in yourself and in your judgement of priorities and stick to them no matter what.&lt;/li&gt;
&lt;li&gt;When you catch yourself procrastinating-ask yourself, &amp;ldquo;What am I avoiding?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Start with the most difficult parts of projects, then either the worst is done or you may find you don&amp;rsquo;t have to do all the other small tasks.&lt;/li&gt;
&lt;li&gt;Catch yourself when you are involved in unproductive projects and stop as soon as you can.&lt;/li&gt;
&lt;li&gt;Find time to concentrate on high priority items or activities.&lt;/li&gt;
&lt;li&gt;Concentrate on one thing at a time.&lt;/li&gt;
&lt;li&gt;Put your efforts in areas that provide long term benefits.&lt;/li&gt;
&lt;li&gt;Push yourself and be persistent, especially when you know you are doing well.&lt;/li&gt;
&lt;li&gt;Think on paper when possible-it makes it easier to review and revise.&lt;/li&gt;
&lt;li&gt;Be sure and set deadlines for yourself whenever possible.&lt;/li&gt;
&lt;li&gt;Delegate responsibilities whenever possible.&lt;/li&gt;
&lt;li&gt;Ask for advice when needed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Adapted from &lt;strong&gt;How to Get Control of Your Time And Your Life&lt;/strong&gt; by A. Lakein.&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/posts/2014-11-14-time-tips/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>Handing off a project to a client; what are the risks and challenges?</title>
        <link>https://robinsonraju.info/management/2014-11-12-handing-off-a-project-to-a-client/</link>
        <pubDate>Wed, 12 Nov 2014 06:25:44 +0000</pubDate>
        
        <guid>https://robinsonraju.info/management/2014-11-12-handing-off-a-project-to-a-client/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/management/2014-11-12-handing-off-a-project-to-a-client/ -&lt;p&gt;The biggest risk and challenge when handing off a project to a client is the fear of meeting the expectation of the client. The lingering question in the mind is “What if what we are presenting is different from what the Client is expecting?”. This happens in spite of the best documentation, design, execution and testing. Even projects that go into meticulous details of documenting every single requirement might in the end come to delivering something that the client is not expecting. Many times the client’s mindset changes, environment changes, technologies change.&lt;/p&gt;
&lt;p&gt;The picture below depicts a very common joke in programming circles –&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Multiple methodologies have been developed to counter this – more in software development than other domains since software is abstract and clients may not be able to envision it before it is created, the risk of not meeting the expectation is higher. Many times, clients might want a new functionality when they see the product for the first time !&lt;/p&gt;
&lt;p&gt;It is precisely for this reason that Agile methodologies have become very popular in the last decade or so. Scrum and other frameworks have ensured that there is maximum transparency between the client and other stakeholders and the product under development. Frequent releases are done and client would be able to see the product and it evolves thereby having a chance to mould it in the right direction before having to say something after it is tool late.&lt;/p&gt;
&lt;p&gt;The other aspect of handing off a project to a client is the sense of loss. As a person who has developed solutions for clients, I can personally vouch for this feeling. Here is a project that the team has worked on for months together and finally when it is handed over and knowledge transition is done, there is a feeling as though something precious is gone from hand to another owner who may not take care of it as you have done ! But effective documentation and good knowledge transition processes would ensure that the system does not get broken under the supervision of new team.&lt;/p&gt;
&lt;p&gt;A good reference for how to hand over a project could be an article written by Ben Ferris where he outlines different steps in the process –&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Picture the end product&lt;/li&gt;
&lt;li&gt;Make the Date Clear&lt;/li&gt;
&lt;li&gt;Documentation and Training&lt;/li&gt;
&lt;li&gt;Get the Sign Off&lt;/li&gt;
&lt;li&gt;Let It Go&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Those 5 points are self-explanatory. In summary, if there is a good plan and team in place to do effective handover, all the parties would be happy.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ferris, B. (2012, July 7). How to Hand Off a Project Successfully. Retrieved November 14, 2014, from &lt;a href=&#34;http://cobaltpm.com/project-hand-off&#34;&gt;http://cobaltpm.com/project-hand-off&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Header Image - &amp;ldquo;Diamond DA42&amp;rdquo; by Jean-Pierre Bovin via &lt;a href=&#34;https://flic.kr/p/o3m4oR&#34;&gt;Flickr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
- https://robinsonraju.info/management/2014-11-12-handing-off-a-project-to-a-client/ - 2020 Robinson Raju</description>
        </item>
    
    
    
        <item>
        <title>What five technical skills are employers seeking? What five soft skills put you on top?</title>
        <link>https://robinsonraju.info/management/2014-11-03-five-technical-skills-are-employers-seeking/</link>
        <pubDate>Mon, 03 Nov 2014 05:19:29 +0000</pubDate>
        
        <guid>https://robinsonraju.info/management/2014-11-03-five-technical-skills-are-employers-seeking/</guid>
        <description>Rob&#39;s Notes https://robinsonraju.info/management/2014-11-03-five-technical-skills-are-employers-seeking/ -&lt;hr&gt;
&lt;h2 id=&#34;header-img-imgblog7tech_skillsjpg&#34;&gt;layout: post
title:  &amp;ldquo;What five technical skills are employers seeking? What five soft skills put you on top?&amp;rdquo;
date:   2014-11-03 05:19:29
author:     &amp;ldquo;Robinson Raju&amp;rdquo;
categories: Career Development
header-img: &amp;ldquo;img/blog7/tech_skills.jpg&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Before jumping directly into technical skills, let us briefly look at the current climate in the world of Information Technology. The current trend is that more companies are trying to recruit new grads. There was a time when companies would want only professionals. More the experience, more the degrees and certificates you had, more sought after you were. But that trend is changing. In an ever changing world, what is required is not someone who has deep expertise in a specific area but someone who can acquire skills fast.&lt;/p&gt;
&lt;p&gt;Top 5 skills according to me would be&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ability to work in a team&lt;/li&gt;
&lt;li&gt;Ability to make decisions and prioritize work&lt;/li&gt;
&lt;li&gt;Ability to communicate well&lt;/li&gt;
&lt;li&gt;Technical competence in the domain that the company works in&lt;/li&gt;
&lt;li&gt;Domain knowledge and passion to work&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yes, technical competence is #4. I’d say that an intelligent person with strong fundamentals can pick up technology pretty fast. Also the technology landscape keeps changing and what is relevant today may not be so tomorrow. So a list of ‘hot technical skills’ today in 2014 may not be relevant to someone who might read this in the future.&lt;/p&gt;
&lt;p&gt;From my experience, the top technical skills are the following. They are not specific languages per se but areas that an average engineer should be aware of. So a Front end engineer who knows basics of deploying in the cloud, programming for mobile and take care of security would be greatly in demand.&lt;/p&gt;
&lt;p&gt;From my experience, the top technical skills are the following. They are not specific languages per se but areas that an average engineer should be aware of. So a Front end engineer who knows basics of deploying in the cloud, programming for mobile and take care of security would be greatly in demand.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Front end web development&lt;/strong&gt; – Long gone is the time when the meat of programming was done in the backend and front end was just a layer to show the data using HTML, JSP ..etc. Recent years have seen an explosion of front-end technologies and frameworks – HTML5, bootstrap.js ..etc have enabled smart engineers to create amazing web applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mobile development&lt;/strong&gt; – iOS or Android – E-commerce on mobile has been growing steadily and has outpaced web in many categories. With the advent of IPad and wearables, apps on devices make more money than corresponding websites. So this is a highly sought after skill.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Scientist / Analyst&lt;/strong&gt; – Another area that is growing very fast is Machine learning and data mining. Companies are accumulating petabytes of user and item data and need to have intelligent systems to mine relevant information to recommend useful items to customers. So if there are engineers who know R language or Classification and clustering techniques, they are in high demand.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cloud Computing&lt;/strong&gt; – In today’s age, an average engineer is expected to know how to provision an Amazon EC2 instance and deploy code to it. Automating the process of provisioning and depoyment, creating an internal cloud, growing or reducing machine pool size on demand ..etc are key skill that are sought after.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt; – Computer security is another key area that is growing rapidly. Security in the cloud and mobile devices is a niche area at the moment. Every company now seeks engineers who know basics of security and also engineering who are experts in the area.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;references&#34;&gt;References:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Top IT Skills For 2014. (n.d.). Retrieved December 2, 2014, from &lt;a href=&#34;http://www.forbes.com/sites/emc/2014/04/22/top-it-skills-for-2014/&#34;&gt;http://www.forbes.com/sites/emc/2014/04/22/top-it-skills-for-2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://robinsonraju.info/management/2014-11-03-five-technical-skills-are-employers-seeking/ - 2020 Robinson Raju</description>
        </item>
    
    
  </channel>
</rss> 